{
  "db_name": "PostgreSQL",
  "query": "\n        select\n            s.id,\n            s.name,\n            s.description,\n            floor(i.reading_date)::bigint as reading_date,\n            avg(i.reading_value) as reading_value,\n            s.color_hex_code,\n            s.font_hex_code\n        from (\n            select\n            r.reading_value as reading_value,\n            r.sensor_id,\n            (\n            floor(\n                extract(epoch from r.reading_date) /\n                extract(epoch from make_interval(0, 0, 0, 0, 0, $1::int, 0.0))\n            ) *\n            extract(epoch from make_interval(0, 0, 0, 0, 0, $1::int, 0.0))\n            ) as reading_date\n            from readings r\n            where r.reading_date > (\n                make_timestamp($2::int, $3::int, $4::int, 0, 0, 0.0) at time zone 'utc'\n            ) and r.reading_date < (\n                make_timestamp($2::int, $3::int, $4::int + $1::int, 0, 0, 0.0) at time zone 'utc'\n            )\n        ) i\n        join sensors s on s.id = i.sensor_id\n        group by s.id, s.description, i.reading_date\n        order by s.id, i.reading_date",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "name",
        "type_info": "Varchar"
      },
      {
        "ordinal": 2,
        "name": "description",
        "type_info": "Varchar"
      },
      {
        "ordinal": 3,
        "name": "reading_date",
        "type_info": "Int8"
      },
      {
        "ordinal": 4,
        "name": "reading_value",
        "type_info": "Float8"
      },
      {
        "ordinal": 5,
        "name": "color_hex_code",
        "type_info": "Varchar"
      },
      {
        "ordinal": 6,
        "name": "font_hex_code",
        "type_info": "Varchar"
      }
    ],
    "parameters": {
      "Left": [
        "Int4",
        "Int4",
        "Int4",
        "Int4"
      ]
    },
    "nullable": [
      false,
      true,
      true,
      null,
      null,
      false,
      false
    ]
  },
  "hash": "2893f2373701c1a3c9a573d8c327469c67a349a5b17b0af7f655173b32fd7bfe"
}
